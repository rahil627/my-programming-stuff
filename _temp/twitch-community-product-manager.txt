heya.

i recently finished my trip down the coast of Cali, now in San Diego, doing gig work down here in the warmth of the sun while i prepare for Mexico and ponder upon some mid-life career directions. I worked at UC Berkeley last summer, and lived in SF thrice before, so i'm quite familar with the area and can re-locate back if it's absolutely necessary, n' hang out at Noisebridge after. Taiwan has been my home for nearly a decade now though, so if it's even possible to live 'n work there, that would be the dream.

i'm at a point in life of coming back to America, coming back to tech-related work. Most of my life's experience is community-related: physical communities of all forms: communes, permaculture homesteads/farm-houses, hostels, maker-spaces, and everything in-between. I spent my adult life living with many people, making beautiful social spaces in time. The digital community is surely quite different, but, having lived across Asia and soon Central America too, i feel comfy living 'n working with people from all over the world. The only difference is the cultural change from physical to digital communication.

i grew up as a gamer, particularly super smash bros melee, which, from the beginning had physical tournaments recorded, then streamed, then developed it's own online play during the pandemic, and back to physical. I personally wasn't too into twitch / watching people online because i'm a physical person, grassrooted in the place that i am in, with friends nearby. However, later in life, living a very different life-style, amongst the rural farmers of Taiwan, and again in isolation on a permaculture farm in Thailand, i found some rural-living videos that were great to share. Twitch, Youtube, and Discord have all come a long way, especially regarding content. Videos of permaculture, sailing, motorcycle maintenance, various cultures of the world; travelling the world by walking, motorcycle, car; discussions on pyschology and sociology, etc., any topic, it's all there, like a new media library. So, as i grew out of games, it's nice to see that Twitch did too, though, it's still a big part of our childhoods that'll stay forever.

within a tech company, i naturally belong to a more product design / generalist role, prefer to always have the big picture in mind from a far viewpoint, naturally communicating, collaborating, understanding what customers want, having a sense of good product design (particularly gameplay, perfect-feeling controls, interaction), prioritizing the most obviously broken things and the lowest hanging fruit of features that would make customers happy, and constantly making the design and code architecture behind it better. Yet, at this moment in life, as i'm just getting back to America, and back to working in tech, i don't mind getting dirty and doing some grunt work either, for the purpose of learning contemporary web tech, honing core programming, hence i'm applying to the api/Go software job too. Design is the simple 'n natural part for me, programming is just the necessary means. When making games alone, both design and programming are so intertwined it's difficult to seperate the two jobs: the program is the design, and the design is the program; So i always feel i must master both. I went from big game engines (Unity) to small game engines (flashpunk/haxepunk, cocos2d) to media frameworks/DIY game engines (heaps, dragonruby/love2d), in search of tools that make game-making a happy flow state. I've only discovered an estoeric gem of a tool recently: dragonruby. I read Twitch similarly hopped from ruby on rails to go and react, a singular big framework to smaller modular programs. For my own personal projects, i'm skipping rails for elixir/phoenix, to force the functional paradigm / being stateless.. Unfortunately, large-scale web apps are such a different beast, a chimera: always changing with new tech, compared to the non-changing pure systems programming of games, that i'm only left with tougher-to-get product/qa/ops jobs such as this one. Anyway, it's worth a try.

the job post entails an extremely qualitative / data-oriented approach, complete with "data scientists". Though important, i still hope there's time for simply listening to the desires of customers (spectators/viewers and the content-makers), and conceptualizing completely new ideas for user interactions/experience, where there may be no analytics for. Again and again, across all software, the most basic and obvious desires are ignored, down to not having a vertical taskbar in windows OS. Software is at an all-time low, thanks to no one knowing C / how computers works. I'll never understand... This job however seems win-win and quite ideal, making customers happy, creating new design ideas, providing a better user experience, immediately fulfilling, similar to the positive feedback cycle of game dev. At least, in that's how i imagine it!

anyway, just e-mail me, as my phone may not work in other countries!

ra
