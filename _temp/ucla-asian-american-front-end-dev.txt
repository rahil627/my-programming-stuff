heya.

i'm at a point in life where i'm coming back to America, specifically California, for the sole purpose of doing career-related work. I recently finished my trip exploring the coast of Cali, now stuck in Ocean Beach, San Diego, doing gig work down here in the warmth of the sun while i ponder upon some mid-life career directions..

normally i wouldn't even try to apply for a web app software engineer job--let alone front-end(!). My tech experience mostly dealt with small video games and funky game 'n new media art installations made with esoteric game engines, frameworks, and languages, so i lack the contemporary large-scale web app skills most pop jobs want: countless js frameworks (front and back), cloud computing / container orchestration, etc. However, because i'm planning to transition to design studio work (freelance or with an agency), i feel like this could be a simple first gig. And with things like figma, webflow, github co-pilot, nowadays, i won't even have to sweat all the small nuances anymore, just focus on the design, which sounds quite blissful! To me, this seems like a small task, but perhaps there's something more i'm missing..?? Maybe there's some digital library web apps that need aid..? Anyway, as i'm just getting back into pro tech work, i don't mind getting dirty and doing some grunt work, for the purpose of getting updated on contemporary web tech (asp.net core, front-end design and simple components), web servers (cloud, containers, devops, etc.), and just honing core programming skill.

within a bigger tech team, i naturally belong to more generalist product roles: making--designing, developing, and maintaining products-- and talking--product manager, QA, customer success--, preferring to always have the big picture in mind from a far viewpoint, understanding a bit of everything, conceptualizing and prototyping products, naturally communicating and collaborating with everyone, understanding what customers want, what they like aesthetically, what they love, having a sense of good product design (great-feeling controls, interaction, a sane user interface and experience), tinkering on products, prioritizing the most obviously broken things and the lowest hanging fruit of features that would make customers happy, and constantly making the design better, inside 'n out. Programming is just the necessary means. When making games solo, both design and programming are so intertwined it's difficult to seperate the two jobs: the program is the design, and the design is the program; So i always feel the need to master both.

i'm definitely not a front-end dev by profession, and so i'm missing one very important required qualification: contemporary front-end js frameworks (react/angular/vue/etc.). For my personal projects, i have no need. I'd rather try phoenix framework and see how far it goes with it's server-side concurrent rendering live-view and live-view.js. I tend to keep my personal projects rather minimalistic, maintainable, simple. So, i'm certain i won't need anything that big, or would just work the design around it. Those big js frameworks are all overkill. It's very likely overkill for the use-cases of this AAC website too. I know these old institutions like to use big enterprise software for no reason, but i hope things can start out small, modularly adding stuff as needed: tailwind, alpine, or whatever. Hopefully there's some youth that will agree!

i made my first blog when i was in middle school using Wordpress, and though i'm familiar, i didn't imagine it nor php would ever last this long... i've long since ditched it for a static site generator (jekyll -> bridgetown?). If i were to make one today, i'd definitely just use phoenix, even for a static site, because it's simple yet has infinite potential. Surely content writers will prefer using their favorite text or markdown editor instead of using a massive CMS..? I'm old, but c'mon! Surely storing data in text files is simpler than hiding it in Wordpress's cryptic database?? Or maybe they've changed their architecture by now.. Thankfully the website uses ASP.NET! My first job was for a rather critical finance web app long ago. It recently sold for millions. To this day, i measure all other languages and frameworks to C# and ASP.NET. It's a sort of comfortable foundation for me. I don't think i could ever turn down a .NET project, because i know it will have the same familiar structure (except blazor).

anyway, i'm hoping the university setting will allow some time to share some tools, knowledge, 'n skills with peers of various tech teams. In addition, i'm interested in emergency medicine too, so it would be great to get some basic training there too. And who knows, maybe auditing a Chinese class would make me feel closer to Taiwan! :D

lastly, obviously, i'm asian american. My parents are Indian, immigrating here. Then i migrated back to Asia, to Taiwan! So, this Asian identity thing is a very deep thing for me. Deep within me, i'm actually closest to certain Taiwanese people, but after a few years in America again, i'm now losing the assimilation battle. Now i must watch li ziqi videos and cry until i get back home. Let's cry together! I've travelled and lived throughout Asia, so, my heart belongs to this department, particularly the Asian films department! If i were to study anything today, it would be indigenous studies at donghua uni in hualian, taiwan. I can't wait for the day i go back.

LA is honestly not a place i like nor want to be in, but i pray i'll feel at home in that department..

please just e-mail me, otherwise, you can try contacting this number: 415-535-8416 .

ra
