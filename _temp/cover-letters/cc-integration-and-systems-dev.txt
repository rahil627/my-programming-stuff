heya!

i'm at a point in life where i'm transitioning back to America, specifically California, solely to work within my first career and make a base in America. I recently finished my motorcycle trip exploring 'n living along the coast of Cali, from Berkeley last summer to San Diego last winter, and now am slowly exploring LA (metro) to make my home away from home.

i've been out of the tech world for quite some time, but recently, during my off-time while working at UC Berkeley (not tech-related), and during the pandemic before that, with just an old chromebook at hand, i discovered some newfound joy in computers again while searching for tools to make making games, gui apps, 'n web apps a more enjoyable experience (--and i found them!: ruby/dragonruby/rails, elixir/phoenix, and soon jai--along with my old fav: haxe/heaps/haxeui--). The journey led me through a history of programming languages, linux, unix/terminals/shells, all the way back to the beginning with lisp/emacs 'n smalltalk! It was a fun blast through the past. So now i'm trying to transition back into web, with an aim for early/founding rails/phoenix startups. A bigger asp.net job such as this is a sort of comfortable backup web job to me, as it was my first ever tech job: at a tiny startup of 4 people (including me!).

that job left such a good impression on me that i still feel the comfort given when working within the microsoft tech stack, and i've only heard it got better, now with core/entity--heck, i even prefer powershell over the linux shells! For big business products with high turnover, working with .NET seems quite fit. It's a very straight-forward standard language, albeit a bit clunky and overtly-complex/featureful nowadays: a great swiss-knife, but without the strong singular leadership of haxe. Maintaining asp.net projects, sounds like the perfect way to get back into coding zen! And with ai assistance now, i won't even have to sweat all the small nuances anymore, just focus on the larger architecture of things, which sounds quite blissful.

it was long, long ago, when linq-to-sql was still new. I mostly focused on ETL/web services, deciphering legacy software (visual basic!) and writing massive queries to get what was needed. The code-base was immaculate, as it was coded by a rather gifted autistic developer. Since there were only 3 devs and one business-man, it was full on dev, 8-10 hours a day. Though not healthy, it was actually the most straight-forward software dev work i've done and served as a great foundation for pop web work, as asp.net provided the framework to work in, allowing me to just focus on dev. Soon after, i transitioned to game engines that use C#--Unity--, though i quickly jumped to better, leaner tools 'n languages. Though i've recently personally chose rails 'n phoenix frameworks for my own use, as i love ruby and the idea of using a functional paradigm for web alongside BEAM, i think it'd be cool to do web work in contemporary .net too, as it has come a long way since.

beyond the inital few pro tech jobs i did, most of my tech experience came from my passion for making games, including video games and games using custom controllers/sensors. As it only requires pure systems programming, usually C++ with an embedded scripting lang, i lack a lot of contemporary web dev skills: infinite js frameworks, cloud computing / container orchestration, language modelling, etc. Thankfully Azure makes it all simpler, and all under one product. Hence my preference for classic frameworks: rails, asp.net, django, etc. I have no interest in re-inventing those solutions in javascript, just as big institutions don't. I approach programming from a solo designer's perspective, so i'm only able to use the best fit tools to implement my design ideas, thus i'm left with skills in bare game/media frameworks and interest in one-man web frameworks. Though, nowadays, i seem to be going crazy, getting closer 'n closer to the hardware. ;)

my nature prefers the chaos of talking and supporting everyone in a community--that's actually what i have decades of experience in--, whilst doing several tasks on several projects on my own, learning and doing a bit of everything. I think i'd be satisfied working at a small media production or startup where it's very DIY and where everyone does everything, so a small liberal arts college is likely the maximum size of an institution i can tolerate. As a solo dev, i have no use and thus no experience in enterprise software, and thankfully, this job seems to be able to use smaller solutions, workaday/pathify/anthology, as opposed to some mess with Oracle software. I could only wish i had the chance to go to the Claremont Colleges when i was young(!). Small size, liberal arts, with tons of nature and culture exploration? Yes. Please..! UC Berkeley was robotic! I've got interests all over the place: game, film, new/interactive media: arts, tech, design, paramedicine, critical studies, feminism, anarchism, cultures: humanities. It would be such a great opportunity to share my life with such bright kids, point whom i can in the right direction, as my journey to remote/rural Taiwan, and now to LA, was a very very long one. ;)

anyway, after travelling down the coast of Cali, i now know for certain there is nothing that even comes close to the culture, geography, nature, 'n climate of Asia, but after wondering around LBC/OC, i truly believe LA (metro) is the closest thing to it, and I've got a hunch i'll end up in SGV, between the Taiwanese and art spots in LA. I can't wait to build a network here! I finally found my home! :)

please just e-mail me, otherwise, you can try contacting this number: 415-535-8416 .

ra
