heya.

i'm at a point in life where i'm transitioning back to America, specifically California, for the sole purpose of doing career-related work. I recently finished my motorcycle trip exploring 'n working along the coast of Cali, from Berkeley last summer to San Diego last winter, and now slowly exploring and making LA (metro) my home in America.

i've been out of the tech world for quite some time, but recently, during my off-time while working at UC Berkeley (not tech-related), with just an old chromebook at hand, i discovered some newfound joy in computers again while searching for tools to make making games, gui apps, 'n web apps a more enjoyable experience (--and i found them!: ruby/dragonruby/rails, elixir/phoenix, and soon jai--along with my old fav: haxe/heaps/haxeui--). The journey led me through a history of programming languages, linux, unix/terminals/shells, all the way back to the beginning with lisp/emacs 'n smalltalk! It was a fun blast through the past. Now i'm trying to transition back into web, with an aim for rails/phoenix startups. A bigger asp.net job such as this is a sort of comfortable backup to me, as it was my first ever tech job: at a tiny startup of 4 people (including me!).

That job left such a good impression on me that i still feel the comfort given when working within the microsoft tech stack, and i've only heard it got better, now with core/entity--heck, i even prefer powershell over the linux shells! For big business products with high turnover, working with .NET seems quite fit. It's a very straight-forward standard language, albeit a bit more clunky and overtly-complex/featureful nowadays: a great swiss-knife, but without the strong leadership of haxe. Maintaining asp.net projects sounds like the perfect way to get back into coding zen! And with github co-pilot now, i won't even have to sweat all the small nuances anymore, just focus on the larger architecture of things, which sounds quite blissful.

it was long, long ago, when linq-to-sql was still new, and i remember the joy of the lead when new features came out, such as extension methods. I mostly focused on ETL/web services, deciphering legacy software (visual basic!) and writing massive queries to get what was needed. Now i'd just have to catch up on Azure/Azure Devops (though, again, for my personal use, i'd just opt for github/gitlab). The code-base was immaculate, as it was coded by a rather gifted autistic developer. Since there were only 3 devs (including me!) and one business-man, it was full on dev, 8-10 hours a day. Though not healthy, it was actually the most straight-forward software dev work i've done and served as a great foundation, as asp.net provided the framework to work in, allowing me to just focus on dev. Though i've recently personally chose rails 'n phoenix frameworks for my own use, as i really like ruby and the idea of using a functional paradigm for web alongside BEAM, i think it'd be cool to catch up on contemporary .net too, as it has come a long way since.

beyond the inital few pro tech jobs i did, most of my tech experience came from my passion for making games, including video games and games using custom controllers/sensors. As it only requires pure systems programming, i lack a lot of contemporary web dev skills: infinite js frameworks, cloud computing / container orchestration, language modelling, etc. Thankfully Azure makes it all simpler, and all under one product. Hence my preference for big old frameworks that have already solved the web problem (: rails, asp.net, django, etc.). I have no interest in re-inventing those solutions in javascript. I approach programming from a solo designer's perspective, so i'm only able to use the best fit tools to implement my design ideas, thus i'm left with skills in esoteric game/media frameworks 'n engines. Though, nowadays, i seem to be going crazy, making things closer 'n closer to scratch. ;)

my nature prefers the chaos of talking and supporting everyone in a community--that's actually what i have decades of experience in--, whilst doing several tasks on several projects on my own, learning and doing a bit of everything. I think i'd be satisfied working at a small media production or startup where it's very DIY and where everyone does everything, but for big institutions like this, i think i could find a home in a department: game, film, new/interactive media: arts, tech, design, philosophy, critical studies, human geography: humanities. The BS in game design and interactive media is something i could only have dreamed existed during my day. I had to move to NYC to discover NYC's spectacular game scene and it's supporting institutions: NYU, Eyebeam, The New School--i nearly did a master's at Parson's design and tech! I hope to run weekly game/art/product play-tests and maker jams while i'm there (or at Glitch City), to give back to the city.

anyway, after travelling down the coast of Cali, i now know for certain there is nothing that even comes close to the culture, geography, nature, 'n climate of Asia, but after wondering around LBC/OC, i truly believe LA (metro) is the closest thing to it! I can't wait to build a network here! I finally found my home! :)

please just e-mail me, otherwise, you can try contacting this number: 415-535-8416 .

ra
