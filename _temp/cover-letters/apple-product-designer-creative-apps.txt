heya.

i'm at a point in life where i'm coming back to America, specifically California, for the sole purpose of doing career-related work. I recently finished my trip exploring the coast of Cali by scooter(!!) and now am in San Diego/Baja Cali while i ponder upon some mid-life career directions..

i've been out of the tech world for some time, but recently, during my off-time while working at UC Berkeley (not tech-related), with just an old chromebook at hand, i discovered some newfound joy in computers again while searching for tools to make making games, gui apps, web apps more enjoyable (and i found them!: dragonruby/mruby, haxeui/haxe, phoenix/elixir). The journey led me through a history of programming languages, linux, unix/terminals/shells, text editors, all the way back to the beginning with lisp/emacs 'n smalltalk'! It was a fun blast through the past. So now i'm trying to transition away from sheer software dev into more generalist IT jobs like systems admin, data visualization, or product design.

though i've become holed into software dev work professionally, it's the new concepts that drive me. Putting new products into the world, in order to change the world. I'm a concept-making machine, from philosophy to apps to funky controller inputs for games. The first part is the most satisfying: to make a prototype with minimalist design as proof-of-concept. The design comes naturally, as it in itself can have endless new concepts within the design. Then, finally, comes the software engineering, in order to finish the product. It's the long-term software engineering that has always killed my energy, leading me on a long quest towards finding 'n designing better engineering tools: programming languages, game engines/frameworks, etc. As a solo maker, i greatly value happiness. Thus i admire nicolas cannasse (haxe) and jon blow (jai/braid), whom both made a programming langauge, a game engine, various modular tools to help make games, and several games, mostly by themselves. Similar to them, i end up going down the first principles route too, desiring to make everything from scratch. But unlike them, however, i wouldn't spend a decade of my life doing it. Life is short. I'd rather make the products, not the tools!

beyond the inital few pro tech jobs i did (.net dev and ETL, qa & release engi), most of my design 'n tech experience came from my passion for making games, including video games: a 4 player arcade style sports game, a multi-device iOS party game, several game prototypes (a touch tracing carnival game for ipad, HORSE for ipad..) [cocos2d -> flashpunk with adobe air -> haxe -> dragonruby]. I loved thiking of new games using the ipad as a new medium, with its 10+ touch inputs. And i still prefer using the ipad mini to this day. I also was into making new input and output devices, leading to more funky physical game experiences. I nearly did a master's at parsons for design and tech for such directions..

anyway, as making games only requires pure systems programming, i honestly lack the contemporary large-scale web app pro work experience to compete in today's software job market, especially in the SF Bay Area: countless js frameworks, cloud computing / container orchestration, language modelling, software for massive scale. Upon seeing this job, i realized, i must go back to my design roots asap, and forget about software engineering jobs. I'm a designer first, engineering was just the means. I simply do whatever it takes to make a product reality, nothing more.

i don't know what the job really entails, but the work it involves, designing, comes most natural to me. I'm a big picture person. Practical. Nomadic. Constantly in flux, travelling the world, living in various ways, designing ways to live, from rural/indigenous Taiwan to coastal Cali and soon to indigenous Mexico. I go from understanding cultures and nature to understanding the details of programming languages, and back. It's wild, but keeps my brain from rotting, unlike sheer software work!

my nature prefers the chaos of talking and supporting everyone in a community, whilst doing several tasks on several projects on my own, learning and doing a bit of everything. I think i'd be satisfied working at a small media production crew where it's very DIY and where everyone does everything, but for big institutions like this, perhaps i can figure out what specializations i'd enjoy. I hope that i can share some knowledge 'n wisdom with the rest of the folks at apple, and see the day-to-day life of software specialists: infrastructure, data visualization, qa. I'd be down for supporting the design of as many projects as i can(!), in addition to designing new products.

SF was the first place i moved to when i had the chance. When i came back to America, i experienced such an inhumane and draining time helping the homeless/drugged there, that i tried living and working at (UC) Berkeley instead. Despite all my time in SF and Berkeley, i never explored the south bay, which is apparently where the most Taiwanese people live! Maybe it's finally time to go to the dystopian place i've always avoided: silicon valley.

anyway, just e-mail me, as i may be in southern Mexico soon, where my phone may not work.

ra
