heya.

i recently finished my trip down the coast of Cali, now in San Diego, doing gig work down here in the warmth of the sun while i prepare for Mexico and ponder upon some mid-life career directions. I worked at UC Berkeley last summer, and lived in SF thrice before, so i'm quite familar with the Bay area and feel comfortable re-locating back if it's necessary (Noisebridge is one of my hang-out spots!). Otherwise, Taiwan has been my home for nearly a decade now, so if it's even possible to live 'n work there, it would be my life's dream: to be back home and still be able to legally work!

i'm at a point in life where i'm coming back to America, coming back to tech-related work. Most of my life's experiences are community-related: physical communities of all forms: communes, permaculture homesteads/farm-houses, hostels, maker-spaces, and everything in-between. I spent my adult life living with many people, making beautiful social spaces across time and space. And within these spaces are often people crafting things, making things, cooking, and then selling wares at physical day markets or on the street. Pinterest, i believe, is just a digital form of that. So for it to help the bohemian folks i've come to love and live with forever, it's an important tool to me.

within a tech company, i naturally belong to a more product designer / maintainer / generalist role, prefering to always have the big picture in mind from a far viewpoint, naturally communicating, collaborating, understanding what customers want, having a sense of practical product design (great-feeling controls, interaction, a sane user interface and experience), prioritizing the most obviously broken things and the lowest hanging fruit of features that would make customers happy, and constantly making the design better and re-facotring code. Yet, at this moment in life, as i'm just getting back to America, and back to working in tech, i don't mind getting dirty and doing some grunt work either, for the purpose of learning contemporary web tech, honing core programming. Design is the simple 'n natural part for me, programming is just the necessary means. When making games solo, both design and programming are so intertwined it's difficult to seperate the two jobs: the program is the design, and the design is the program; So i always feel i must master both.

i went from big game engines (Unity) to small game engines (flashpunk/haxepunk, cocos2d) to media frameworks/DIY game engines (heaps, dragonruby/love2d), in search of tools to make game-making a happy flow state. Only until recently did i discover a rare gem of a tool recently: dragonruby (along with haxe!). Game programming has never been as blissful as using ruby (and probably won't happen again until Jai comes out).

on the web side, unfortunately, only my first two jobs, a decade ago, dealt with it: the first used .NET/C# back when linq-to-sql was new, and as a "qa and release engineer" for perfect world entertainment, as a sort of liason between back, front, and product teams.

pinterest, if i recall correctly, was one of those ruby-on-rails SF startups of the dotcom boom that came up when i first moved to SF, possibly updating to elixir and modularizing bits afterwards. Ruby-on-rails would've been my choice for personal web projects too, but since i missed out on that era, i'm now skipping to phoenix/elixir, so maybe we share a certain taste (or distaste of keeping up with js). I tried it out recently, and the boiler-plate code generation was great! I'd hope the functional / stateless paradigm would keep things simple, maintainable.. Unfortunately, large-scale web apps are such a different beast, a chimera: always changing with new tech, compared to the non-changing pure systems programming of games (it all eventually ends in C); I could never keep up. So now i'm only left with tougher-to-get product/qa/ops jobs, or the very rare entry-level ones like this one.

anyway, just e-mail me, as my phone may not work in other countries!

i truly do believe Pinterest (along with Twitch, Discord, DoorDash) is one of those important 'n ideal dotcom era SF tech tools: ones that empowers people to create their own business (and therefore freedom), community, and world out of the things they are passionate about..!

ra
