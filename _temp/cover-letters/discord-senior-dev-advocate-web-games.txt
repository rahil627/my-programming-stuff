heya.

i recently finished my trip exploring the coast of Cali, now stuck in San Diego/Tijauna, doing gig work down here in the warmth of the sun while i prepare for Central America and ponder upon some mid-life career directions.. I'm at a point in life where i'm coming back to America, specifically California, for the sole purpose of doing career-lated work.

discord (along with Twitch, and Pinterest and Doordash too), to me, is one of the most important 'n ideal dotcom era SF techs: ones that empowers people to create their own business (and therefore freedom), community, and world out of the things they are passionate about. But as a gamer, from the battle.net days of editing custom starcraft maps, to competing in super smash bros melee tournaments posted on the beloved smashboards forums, to playing indie games on steam, to making indie games, discord harkens my childhood like no other: hangin' with my friends through a digital chat room.

in contrast, most of my later life's experiences dealt with physical communities: communes, permaculture homesteads/farm-houses, hostels, maker-spaces, and everything in-between. I spent my adult life living with many people, making beautiful social spaces across the world. Discord accomplishes that digitally: enabling people to build beautiful *digital* social spaces across the digital world. The ways of communciation are completely different, but now with messaging apps in our pockets, it's become mixed into reality.

i've applied to a few jobs at Discord in the past, some beyond my experience; This is the first time there's a role actually suits me near perfectly, and doesn't require having years of contemporary web tech experience (or maybe it does.. :/).

within a tech company, i naturally belong to a more product maintainer / generalist / customer advocate / designer role, prefering to always have the big picture in mind from a far viewpoint, naturally communicating, collaborating, understanding what customers want, having a sense of practical product design (great-feeling controls, interaction, a sane user interface and experience), prioritizing the most obviously broken things and the lowest hanging fruit of features that would make customers happy, and constantly making the design better and re-facotring code. Yet, at this moment in life, as i'm just getting back to pro tech work, i don't mind getting dirty and doing some grunt work either, for the purpose of learning contemporary web tech, honing core programming. Design is the simple 'n natural part for me, programming is just the necessary means. When making games solo, both design and programming are so intertwined it's difficult to seperate the two jobs: the program is the design, and the design is the program; So i always feel i must master both.

during my lifetime, i went from big game engines (unity) to small game engines (flashpunk/haxepunk, cocos2d, luxe) to no engines/media frameworks (heaps, dragonruby/love2d), in search of tools to make game-making a pleasant experience. Only until recently did i find bliss with dragonruby (though i love haxe too). Though i didn't bother with game-center-like api's, i can surely empathize with the game dev's perspective. And i certainly wouldn't mind maintaining examples 'n documentation for integrating discord's api's with all the major engines, linking the lib/dll, maintaining automatically-generated externs for various languages, and maintaining project templates ("starter kits"). I never thought the experience of searching for and building a personal game framework would ever come in handy for a professional job, until this one.

(of note: along this personal game dev journey, discord was crucial. All of those rather small game frameworks/engines, programming languages, 'n tools that i personally explored would've died without discord. Discord enabled those tools-makers to maintain community and momentum. I learned the most about computer programming through the haxe community discord, which is blessed to have a tiny community of talented game-makers, artsy tinkerers, and gifted software devs.)

unfortunately for this job, i don't have contemporary web experience, neither through web apps nor web games. My first tech job used ASP.NET, which provided a sort of all-in-one-solution framework (i'm still actually fond of how neat 'n organized that project was..). And my second tech job, as "qa and release engineer" at Perfect World, was more of a communicative liason job for a bunch of messy js websites. Only until very recently, a decade later, i played with some personal web app ideas, and again, i chose a framework: phoenix/elixir. Though i love the framework and language, i didn't get deep enough into the project to be comfy with contemporary js front-end (tailwind css, possibly live-svelte). And as for game api's, the only one i recall using was for a local multi-player iOS game which used GameKit just to access the local bluetooth session.. I love games for what they are, so i personally never cared about things like achievements, etc. For the job, i'll def have to make some "activity" games myself, which would be a fun game jam theme!

with web as my weakness, it's near impossible to land any contemporary job without it. Product roles are surely extremely competitive. And this is the first time i've ever even heard of a senior role for a dev advocate!

anyway, i worked at UC Berkeley (not tech related) last summer and lived in SF thrice before, so i'm quite familar with the Bay area and feel comfortable re-locating back if it's necessary (SF's sunny-side or richmond/sunset). Otherwise, Taiwan has been my home for nearly a decade now (slowly losing my mandarin..), so if it's even possible to live 'n work from there, it would be my life's dream: to be able to work with my childhood's passion while at home.

please just e-mail me, as i'll be getting another phone in Mexico! The only other job that seems to be in the process is a simple IT job at UCSC's game/film dept, which is also pretty rad!

ra
