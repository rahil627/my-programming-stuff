
heya.

i was just travelling down the coast on a little scooter and stopped by SLO. I took a break for two nights. The second night happened to be thursday: the night of the loveliest night market i've experienced in America (and i've been to just about every night market in Taiwan..!!)! Anyway, from that little experience, it felt like a nice little town to live in and do some work (along with Santa Cruz!), which is how i came upon this job. I've now just finished my trip, in San Diego, a bit too tired to ride back up, so i'm just applying to a few jobs in my favorite places along the coast.

i'm no sys-admin by experience; i used to make silly little games, arcade machines, interactive things, etc when i was young, and even then, was naturally more into buildling communal spaces of hope and helping others rather than making my own things. Because of this, my experience is mostly limited to systems-programming, and more recently, in languages with a garbage collector (it's been a while since i've done C++, and objective-C/iOS was a factor in why i stopped programming!). Recently, while stuck in another country during the pandemic and once again feeling stuck in Berkeley, i've been getting into some deep tech rabbit holes while choosing dev tools that i like: programming languages, text editors, game engines, etc, all ultimately leading me to some rather esoteric tools: ruby (including dragonruby, at least until jai is released), haxe, elixir/BEAM, and emacs (+org-mode). Along the journey i've tried a bunch of stuff: linux (arch, debian) via a chromeos/lxc vm, terminals/unix (fish to powershell, once i finally got another windows laptop), vi/nvim, etc. It was what i imagine programming in the 80s to be like. Though i'm not a linux person nor do i believe in the unix ideal (though i do dig modular tools), i do enjoy its ability to be automated, scripting, jumping servers via terminal: basically, being a hacker wizard controlling a bunch of computers and running programs concurrently through a single terminal 'n tailscale is still cool to me. And that's what i imagine these sys admin jobs are like. ;)

i have no experience with enterprise software: vm (cloud service or private), infrastructure as code (nor nix(OS)), config software (ansible, puppet, etc.), etc. None of it was ever needed for my own personal projects. I'm usually a pragmatic person: i only do what's necessary to get the job done. And games only requires systems programming, not web, not sys admin, not IT. It's a weak catch-22. Beyond that, i've had interests in neat tools, including prog langs, and after being surprised to like emacs, i feel it won't hurt to try things like haskell 'n smalltalk/glamorous toolkit 'n red (language). :) But usually the simplest solution is just solving it via a general-use programming language; And now with AI, i imagine scripting/writing small programs would be cake! I was very happy to discover i enjoyed making games once again, without a game engine, starting with a more bare media framework. Heck, I don't even like git! Surely, being a tech school, there are more qualified people for the job, whom perhaps had some courses that involved using enterprise software.. but ah well, it's worth a shot..!

ahhh, i miss that little town already... :)
